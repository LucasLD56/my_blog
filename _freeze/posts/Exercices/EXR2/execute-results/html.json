{
  "hash": "ade9b8b9db2d5b231a1f3b3c74714bb6",
  "result": {
    "markdown": "---\ntitle: \"EX2R\"\nauthor: \"Lucas LE DREVO\"\nformat: html\neditor: visual\n---\n\n\n## Présentation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(purrr)\nlibrary(rvest)\nlibrary(stringr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: le package 'stringr' a été compilé avec la version R 4.3.2\n```\n:::\n\n```{.r .cell-code}\nlist_tables <-\n  session(\"https://fr.wikipedia.org/wiki/Liste_des_m%C3%A9daill%C3%A9s_olympiques\") |>\n  html_elements(\".wikitable\") |>\n  html_table()\n```\n:::\n\n\nL'objet **`list_tables`** contient les données extraites de toutes les tables HTML ayant la classe \"wikitable\" sur la page Wikipédia spécifiée. Cela devrait inclure les informations sur les médaillés olympiques.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Sélectionner la première table de list_tables\ndata_medailles_sport_ete <- list_tables[[1]]\n\n# Supprimer la première colonne\ndata_medailles_sport_ete <- data_medailles_sport_ete[, -1]\n\n# Supprimer les noms de colonnes\ncolnames(data_medailles_sport_ete) <- NULL\n\n# Supprimer la première ligne\ndata_medailles_sport_ete <- data_medailles_sport_ete[-1, ]\n\n# Renommer les colonnes\ncolnames(data_medailles_sport_ete) <- c(\"Discipline\", \"Annees\", \"Editions\", \"Epreuves_2020\", \"Or\", \"Argent\", \"Bronze\", \"Total\", \"Athletes_medailles\", \"Athletes_or\")\n\n# Convertir les colonnes en entiers\ncols_to_convert <- c(\"Editions\", \"Epreuves_2020\", \"Or\", \"Argent\", \"Bronze\", \"Total\")\ndata_medailles_sport_ete[, cols_to_convert] <- lapply(data_medailles_sport_ete[, cols_to_convert], as.integer)\n```\n:::\n\n\nL'objet **`data_medailles_sport_ete`** devrait contenir la première table nettoyée et formatée de manière appropriée, avec les colonnes et les données conformes aux spécifications que nous avons fournies.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Agréger les médailles par discipline\nmedailles_par_discipline <- aggregate(cbind(Or, Argent, Bronze, Total) ~ Discipline, data = data_medailles_sport_ete, sum)\n\n# Trier les disciplines par le total de médailles\nmedailles_par_discipline <- medailles_par_discipline[order(medailles_par_discipline$Total, decreasing = TRUE), ]\n\n# Sélectionner les trois disciplines avec le plus grand nombre de médailles\ntop_3_disciplines <- head(medailles_par_discipline, 3)\n\n# Afficher le résultat\nprint(top_3_disciplines[, c(\"Discipline\", \"Total\")])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                 Discipline Total\n1                Athlétisme  3085\n19 Natation(hommes, femmes)  1814\n17                    Lutte  1358\n```\n:::\n:::\n\n\nLes trois disciplines avec le plus grand nombre de médailles distribuées depuis le début des Jeux olympiques, avec leur total respectif de médailles sont :\n\n1.  Athlétisme : 3085 médailles\n\n2.  Natation (hommes, femmes) : 1814 médailles\n\n3.  Lutte : 1358 médailles\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Trier les disciplines par le nombre d'épreuves en 2020\ndisciplines_moins_epreuves_2020 <- data_medailles_sport_ete[order(data_medailles_sport_ete$Epreuves_2020), ]\n\n# Sélectionner les trois disciplines avec le moins d'épreuves\ntop_3_disciplines_moins_epreuves <- head(disciplines_moins_epreuves_2020, 3)\n\n# Afficher le résultat\nprint(top_3_disciplines_moins_epreuves[, c(\"Discipline\", \"Epreuves_2020\")])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  Discipline Epreuves_2020\n  <chr>              <int>\n1 Football               2\n2 Golf                   2\n3 Handball               2\n```\n:::\n:::\n\n\nLes trois disciplines avec le moins d'épreuves en 2020, avec leur nombre d'épreuves respectif sont :\n\n1.  Football : 2 épreuves\n\n2.  Golf : 2 épreuves\n\n3.  Handball : 2 épreuves\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncalcul_nb_editions <- function(depuis, data) {\n  nb_editions <- sum(data$Annees >= depuis)\n  return(nb_editions)\n}\n\n\n# Exemple d'utilisation de la fonction calcul_nb_editions\nannee_debut <- 1900  # Spécifiez ici l'année à partir de laquelle vous souhaitez compter les éditions\nnb_editions <- calcul_nb_editions(annee_debut, data_medailles_sport_ete)\nprint(nb_editions)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 26\n```\n:::\n:::\n\n\nNous avons utilisé la fonction pour compter le nombre d'éditions depuis 1900, et elle a retourné 26, ce qui correspond au nombre total d'apparitions des disciplines aux Jeux olympiques d'été depuis cette année-là.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncalcul_nb_editions_str <- function(annees_str, data) {\n  # Diviser la chaîne de caractères en une liste d'années ou d'intervalles d'années\n  intervalles <- unlist(strsplit(annees_str, \", \"))\n  \n  # Initialiser le compteur d'éditions\n  nb_editions <- 0\n  \n  # Parcourir chaque intervalle ou année\n  for (intervalle in intervalles) {\n    # Vérifier si l'intervalle est une année unique ou une plage d'années\n    if (grepl(\"depuis\", intervalle)) {\n      # Si c'est une plage d'années, obtenir l'année de début\n      depuis <- as.integer(gsub(\"[^0-9]\", \"\", intervalle))\n      # Ajouter au compteur le nombre d'éditions à partir de cette année jusqu'à la dernière année dans les données\n      nb_editions <- nb_editions + sum(data$Annees >= depuis)\n    } else {\n      # Si c'est une année unique, ajouter simplement une édition si cette année est présente dans les données\n      annee <- as.integer(intervalle)\n      nb_editions <- nb_editions + as.integer(annee %in% data$Annees)\n    }\n  }\n  \n  return(nb_editions)\n}\n\n# Exemple d'utilisation de la fonction calcul_nb_editions_str\nannees_str <- \"1896, 1904, depuis 1920\"\nnb_editions <- calcul_nb_editions_str(annees_str, data_medailles_sport_ete)\nprint(nb_editions)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 18\n```\n:::\n:::\n\n\nLe nombre d'éditions pour les années 1896, 1904, et depuis 1920 est 18.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncalcul_nb_editions <- function(depuis, data) {\n  UseMethod(\"calcul_nb_editions\")\n}\n\ncalcul_nb_editions.integer <- function(depuis, data) {\n  nb_editions <- sum(data$Annees >= depuis)\n  return(nb_editions)\n}\n\ncalcul_nb_editions.character <- function(annees_str, data) {\n  intervalles <- unlist(strsplit(annees_str, \", \"))\n  nb_editions <- 0\n  for (intervalle in intervalles) {\n    if (grepl(\"depuis\", intervalle)) {\n      depuis <- as.integer(gsub(\"[^0-9]\", \"\", intervalle))\n      nb_editions <- nb_editions + sum(data$Annees >= depuis)\n    } else {\n      annee <- as.integer(intervalle)\n      nb_editions <- nb_editions + as.integer(annee %in% data$Annees)\n    }\n  }\n  return(nb_editions)\n}\n\n# Exemple d'utilisation\n# Appel avec un entier en entrée\ncalcul_nb_editions.integer(2000, data_medailles_sport_ete)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 16\n```\n:::\n\n```{.r .cell-code}\n# Appel avec une chaîne de caractères en entrée\ncalcul_nb_editions.character(\"1904–1924, depuis 1948\", data_medailles_sport_ete)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in calcul_nb_editions.character(\"1904–1924, depuis 1948\",\ndata_medailles_sport_ete): NAs introduits lors de la conversion automatique\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 17\n```\n:::\n:::\n\n\nIl y a eu 16 éditions à partir de l'année 2000 et 17 entre 1904 et 1924, plus celles à partir de 1948.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncalcul_medailles_individuelles <- function(data) {\n  # Sélectionner la colonne des athlètes et les médailles obtenues\n  athletes_medals <- data$Athletes_medailles\n  \n  # Séparer les éléments de la colonne en utilisant le motif '(', ')' pour extraire le nombre de médailles\n  medals <- unlist(strsplit(athletes_medals, \"\\\\(\"))\n  \n  # Nettoyer les caractères non numériques et conserver uniquement les chiffres\n  cleaned_medals <- gsub(\"[^0-9]\", \"\", medals)\n  \n  # Supprimer les éléments vides résultant du nettoyage\n  cleaned_medals <- cleaned_medals[cleaned_medals != \"\"]\n  \n  # Convertir en entiers et extraire le nombre maximal de médailles parmi tous les athlètes\n  max_medals <- max(as.integer(cleaned_medals), na.rm = TRUE)\n  \n  return(max_medals)\n}\n\n# Exemple d'utilisation\nmax_medals <- calcul_medailles_individuelles(data_medailles_sport_ete)\nprint(max_medals)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2332\n```\n:::\n:::\n\n\nLe nombre maximal de médailles individuelles obtenues est de 2332.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Définir la fonction pour extraire le nombre total de médailles\nextraire_nombre_medailles <- function(athletes_medals) {\n  # Extraire le nom de l'athlète\n  athlete_name <- sub(\"\\\\s*\\\\(.*\\\\)\", \"\", athletes_medals) \n  \n  # Extraire le nombre de médailles d'or, d'argent et de bronze\n  medals <- as.numeric(unlist(str_extract_all(athletes_medals, \"\\\\d+\")))\n  \n  list(Athlete = athlete_name, Or = medals[1], Argent = medals[2], Bronze = medals[3])\n}\n\n# Appliquer la fonction à chaque élément de la colonne Athletes_medailles\nmedailles_par_athlete <- lapply(data_medailles_sport_ete$Athletes_medailles, extraire_nombre_medailles)\n\n# Créer un data frame avec les noms des athlètes et leur nombre total de médailles\nathletes_df <- data.frame(do.call(rbind, medailles_par_athlete), stringsAsFactors = FALSE)\n\n# Convertir les colonnes Or, Argent et Bronze en numérique\nathletes_df$Or <- as.numeric(athletes_df$Or)\nathletes_df$Argent <- as.numeric(athletes_df$Argent)\nathletes_df$Bronze <- as.numeric(athletes_df$Bronze)\n\n# Calculer le nombre total de médailles\nathletes_df$Total_Medals <- rowSums(athletes_df[, c(\"Or\", \"Argent\", \"Bronze\")])\n\n# Trier le data frame par nombre total de médailles pour obtenir le top 3\ntop_3_athletes <- head(athletes_df[order(-athletes_df$Total_Medals), ], 3)\n\n# Afficher le top 3 des athlètes\nprint(top_3_athletes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               Athlete Or Argent Bronze Total_Medals\n18      Michael Phelps 23      3      2           28\n12    Larissa Latynina  9      5      4           18\n9  Edoardo Mangiarotti  6      5      2           13\n```\n:::\n:::\n\n\nVoici le top 3 des athlètes basé sur le nombre total de médailles :\n\n1.  Michael Phelps avec un total de 28 médailles (23 en or, 3 en argent et 2 en bronze).\n\n2.  Larissa Latynina avec un total de 18 médailles (9 en or, 5 en argent et 4 en bronze).\n\n3.  Edoardo Mangiarotti avec un total de 13 médailles (6 en or, 5 en argent et 2 en bronze).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Définir la fonction pour extraire les nationalités des athlètes\nextraire_nationalite_athlete <- function(athletes_medals) {\n  # Extraire les nationalités des athlètes à partir de la chaîne de caractères\n  nationalites <- gsub(\".*\\\\((\\\\w+)\\\\).*\", \"\\\\1\", athletes_medals)\n  \n  # Compter le nombre d'athlètes pour chaque nationalité\n  nationalites_count <- table(nationalites)\n  \n  return(nationalites_count)\n}\n\n# Appliquer la fonction à toute la colonne Athletes_medailles\nnationalites_par_athlete <- lapply(data_medailles_sport_ete$Athletes_medailles, extraire_nationalite_athlete)\n\n# Agréger les résultats pour compter le nombre total d'athlètes pour chaque nationalité\ntotal_nationalites <- do.call(rbind, nationalites_par_athlete)\ntotal_nationalites <- colSums(total_nationalites)\n\n# Trier les résultats pour obtenir les trois nationalités les plus représentées\ntop_3_nationalites <- head(sort(total_nationalites, decreasing = TRUE), 3)\n\n# Afficher les trois nationalités les plus représentées et leur effectif\nprint(top_3_nationalites)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nFIN \n 30 \n```\n:::\n:::\n\n\n\"FIN\" (Finlande) est la seule nationalité présente dans les données avec un total de 30 athlètes.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}